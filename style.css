const nameFormContainer = document.getElementById('name-form-container');
const nameForm = document.getElementById('name-form');
const nameInput = document.getElementById('name-input');
const gameArea = document.getElementById('game-area');
const userNameDisplay = document.getElementById('user-name');
const scoreInfo = document.getElementById('score-info');
const questionElement = document.getElementById('question');
const answerButtons = document.getElementById('answer-buttons');
const tryAgainBtn = document.getElementById('try-again-btn');

let userName = '';
let questions = [
  {
    question: 'Որն է Հայաստանի մայրաքաղաքը?',
    answers: [
      { text: 'Երևան', correct: true },
      { text: 'Թբիլիսի', correct: false },
      { text: 'Բաքու', correct: false },
      { text: 'Ստեփանակերտ', correct: false }
    ]
  },
  {
    question: 'Որն է Ռուսաստանի մայրաքաղաքը?',
    answers: [
      { text: 'Մոսկվա', correct: true },
      { text: 'Սանկտ Պետերբուրգ', correct: false },
      { text: 'Կազան', correct: false },
      { text: 'Նովոսիբիրսկ', correct: false }
    ]
  },
  // остальные вопросы с разным расположением правильного ответа
];

let shuffledQuestions = [];
let currentQuestionIndex = 0;
let correctCount = 0;
let wrongCount = 0;

nameForm.addEventListener('submit', e => {
  e.preventDefault();
  userName = nameInput.value.trim();
  if (!userName) return;
  startGame();
});

function startGame() {
  nameFormContainer.style.display = 'none';
  gameArea.style.display = 'block';
  userNameDisplay.textContent = `Անուն՝ ${userName}`;
  resetGame();
  shuffleQuestions();
  showQuestion();
  updateScore();
  tryAgainBtn.style.display = 'none';
}

function resetGame() {
  currentQuestionIndex = 0;
  correctCount = 0;
  wrongCount = 0;
}

function shuffleQuestions() {
  shuffledQuestions = questions
    .map(q => ({ ...q }))
    .sort(() => Math.random() - 0.5);
  shuffledQuestions.forEach(q => {
    q.answers = q.answers.sort(() => Math.random() - 0.5);
  });
}

function showQuestion() {
  resetState();

  const currentQuestion = shuffledQuestions[currentQuestionIndex];
  questionElement.textContent = currentQuestion.question;

  // Анимация плавного появления
  questionElement.style.opacity = 0;
  answerButtons.style.opacity = 0;

  setTimeout(() => {
    questionElement.style.transition = 'opacity 0.5s';
    answerButtons.style.transition = 'opacity 0.5s';
    questionElement.style.opacity = 1;
    answerButtons.style.opacity = 1;
  }, 50);

  currentQuestion.answers.forEach(answer => {
    const button = document.createElement('button');
    button.innerText = answer.text;
    button.classList.add('btn');
    button.addEventListener('click', () => selectAnswer(button, answer.correct));
    answerButtons.appendChild(button);
  });
}

function resetState() {
  clearStatusClass(document.body);
  while (answerButtons.firstChild) {
    answerButtons.removeChild(answerButtons.firstChild);
  }
}

function selectAnswer(button, correct) {
  if (correct) {
    button.classList.add('correct');
    correctCount++;
  } else {
    button.classList.add('wrong');
    wrongCount++;
    // Подсветить правильный ответ
    Array.from(answerButtons.children).forEach(btn => {
      if (shuffledQuestions[currentQuestionIndex].answers.find(a => a.text === btn.innerText && a.correct)) {
        btn.classList.add('correct');
      }
    });
  }

  Array.from(answerButtons.children).forEach(btn => btn.disabled = true);

  updateScore();

  setTimeout(() => {
    currentQuestionIndex++;
    if (currentQuestionIndex < shuffledQuestions.length) {
      showQuestion();
    } else {
      endGame();
    }
  }, 1500);
}

function updateScore() {
  const remaining = shuffledQuestions.length - currentQuestionIndex;
  scoreInfo.textContent = `Մնացել է՝ ${remaining} | Ճիշտ՝ ${correctCount} | Սխալ՝ ${wrongCount}`;
}

function endGame() {
  questionElement.textContent = `Խաղը ավարտվեց։ ${correctCount >= 5 ? 'Դուք հաղթեցիք!' : 'Դուք պարտվեցիք։'}`;
  answerButtons.style.display = 'none';
  tryAgainBtn.style.display = 'block';
}

tryAgainBtn.addEventListener('click', () => {
  tryAgainBtn.style.display = 'none';
  answerButtons.style.display = 'flex';
  resetGame();
  shuffleQuestions();
  showQuestion();
  updateScore();
});
